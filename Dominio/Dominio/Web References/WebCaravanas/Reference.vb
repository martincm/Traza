'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.269
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.269.
'
Namespace WebCaravanas
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ConsultarCaravanasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Dominio.My.MySettings.Default.Dominio_WebCaravanas_Service
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ConsultarCaravanasCompleted As ConsultarCaravanasCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultarCaravanas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCaravanas(ByVal Fecha As String) As Lectura()
            Dim results() As Object = Me.Invoke("ConsultarCaravanas", New Object() {Fecha})
            Return CType(results(0),Lectura())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCaravanasAsync(ByVal Fecha As String)
            Me.ConsultarCaravanasAsync(Fecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCaravanasAsync(ByVal Fecha As String, ByVal userState As Object)
            If (Me.ConsultarCaravanasOperationCompleted Is Nothing) Then
                Me.ConsultarCaravanasOperationCompleted = AddressOf Me.OnConsultarCaravanasOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCaravanas", New Object() {Fecha}, Me.ConsultarCaravanasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCaravanasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCaravanasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCaravanasCompleted(Me, New ConsultarCaravanasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Lectura
        
        Private tipoRegistroField As Integer
        
        Private ordinalField As Integer
        
        Private caravanaField As String
        
        Private fechaLecturaField As Date
        
        Private fechaInsercionDBField As Date
        
        '''<comentarios/>
        Public Property TipoRegistro() As Integer
            Get
                Return Me.tipoRegistroField
            End Get
            Set
                Me.tipoRegistroField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Ordinal() As Integer
            Get
                Return Me.ordinalField
            End Get
            Set
                Me.ordinalField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Caravana() As String
            Get
                Return Me.caravanaField
            End Get
            Set
                Me.caravanaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property FechaLectura() As Date
            Get
                Return Me.fechaLecturaField
            End Get
            Set
                Me.fechaLecturaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property FechaInsercionDB() As Date
            Get
                Return Me.fechaInsercionDBField
            End Get
            Set
                Me.fechaInsercionDBField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ConsultarCaravanasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCaravanasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCaravanasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Lectura()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Lectura())
            End Get
        End Property
    End Class
End Namespace
