'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.296
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.296.
'
Namespace E_Factura
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WS_eFacturaSoapBinding", [Namespace]:="http://dgi.gub.uy")>  _
    Partial Public Class WS_eFactura
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private EFACCONSULTARESTADOENVIOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EFACRECEPCIONREPORTEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EFACRECEPCIONSOBREOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Dominio.My.MySettings.Default.Dominio_E_Factura_WS_eFactura
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event EFACCONSULTARESTADOENVIOCompleted As EFACCONSULTARESTADOENVIOCompletedEventHandler
        
        '''<remarks/>
        Public Event EFACRECEPCIONREPORTECompleted As EFACRECEPCIONREPORTECompletedEventHandler
        
        '''<remarks/>
        Public Event EFACRECEPCIONSOBRECompleted As EFACRECEPCIONSOBRECompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dgi.gub.uyaction/AWS_EFACTURA.EFACCONSULTARESTADOENVIO", RequestElementName:="WS_eFactura.EFACCONSULTARESTADOENVIO", RequestNamespace:="http://dgi.gub.uy", ResponseElementName:="WS_eFactura.EFACCONSULTARESTADOENVIOResponse", ResponseNamespace:="http://dgi.gub.uy", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EFACCONSULTARESTADOENVIO(ByVal Datain As Data) As <System.Xml.Serialization.XmlElementAttribute("Dataout")> Data
            Dim results() As Object = Me.Invoke("EFACCONSULTARESTADOENVIO", New Object() {Datain})
            Return CType(results(0),Data)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EFACCONSULTARESTADOENVIOAsync(ByVal Datain As Data)
            Me.EFACCONSULTARESTADOENVIOAsync(Datain, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EFACCONSULTARESTADOENVIOAsync(ByVal Datain As Data, ByVal userState As Object)
            If (Me.EFACCONSULTARESTADOENVIOOperationCompleted Is Nothing) Then
                Me.EFACCONSULTARESTADOENVIOOperationCompleted = AddressOf Me.OnEFACCONSULTARESTADOENVIOOperationCompleted
            End If
            Me.InvokeAsync("EFACCONSULTARESTADOENVIO", New Object() {Datain}, Me.EFACCONSULTARESTADOENVIOOperationCompleted, userState)
        End Sub
        
        Private Sub OnEFACCONSULTARESTADOENVIOOperationCompleted(ByVal arg As Object)
            If (Not (Me.EFACCONSULTARESTADOENVIOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EFACCONSULTARESTADOENVIOCompleted(Me, New EFACCONSULTARESTADOENVIOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dgi.gub.uyaction/AWS_EFACTURA.EFACRECEPCIONREPORTE", RequestElementName:="WS_eFactura.EFACRECEPCIONREPORTE", RequestNamespace:="http://dgi.gub.uy", ResponseElementName:="WS_eFactura.EFACRECEPCIONREPORTEResponse", ResponseNamespace:="http://dgi.gub.uy", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EFACRECEPCIONREPORTE(ByVal Datain As Data) As <System.Xml.Serialization.XmlElementAttribute("Dataout")> Data
            Dim results() As Object = Me.Invoke("EFACRECEPCIONREPORTE", New Object() {Datain})
            Return CType(results(0),Data)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EFACRECEPCIONREPORTEAsync(ByVal Datain As Data)
            Me.EFACRECEPCIONREPORTEAsync(Datain, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EFACRECEPCIONREPORTEAsync(ByVal Datain As Data, ByVal userState As Object)
            If (Me.EFACRECEPCIONREPORTEOperationCompleted Is Nothing) Then
                Me.EFACRECEPCIONREPORTEOperationCompleted = AddressOf Me.OnEFACRECEPCIONREPORTEOperationCompleted
            End If
            Me.InvokeAsync("EFACRECEPCIONREPORTE", New Object() {Datain}, Me.EFACRECEPCIONREPORTEOperationCompleted, userState)
        End Sub
        
        Private Sub OnEFACRECEPCIONREPORTEOperationCompleted(ByVal arg As Object)
            If (Not (Me.EFACRECEPCIONREPORTECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EFACRECEPCIONREPORTECompleted(Me, New EFACRECEPCIONREPORTECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dgi.gub.uyaction/AWS_EFACTURA.EFACRECEPCIONSOBRE", RequestElementName:="WS_eFactura.EFACRECEPCIONSOBRE", RequestNamespace:="http://dgi.gub.uy", ResponseElementName:="WS_eFactura.EFACRECEPCIONSOBREResponse", ResponseNamespace:="http://dgi.gub.uy", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EFACRECEPCIONSOBRE(ByVal Datain As Data) As <System.Xml.Serialization.XmlElementAttribute("Dataout")> Data
            Dim results() As Object = Me.Invoke("EFACRECEPCIONSOBRE", New Object() {Datain})
            Return CType(results(0),Data)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EFACRECEPCIONSOBREAsync(ByVal Datain As Data)
            Me.EFACRECEPCIONSOBREAsync(Datain, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EFACRECEPCIONSOBREAsync(ByVal Datain As Data, ByVal userState As Object)
            If (Me.EFACRECEPCIONSOBREOperationCompleted Is Nothing) Then
                Me.EFACRECEPCIONSOBREOperationCompleted = AddressOf Me.OnEFACRECEPCIONSOBREOperationCompleted
            End If
            Me.InvokeAsync("EFACRECEPCIONSOBRE", New Object() {Datain}, Me.EFACRECEPCIONSOBREOperationCompleted, userState)
        End Sub
        
        Private Sub OnEFACRECEPCIONSOBREOperationCompleted(ByVal arg As Object)
            If (Not (Me.EFACRECEPCIONSOBRECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EFACRECEPCIONSOBRECompleted(Me, New EFACRECEPCIONSOBRECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://dgi.gub.uy")>  _
    Partial Public Class Data
        
        Private xmlDataField As String
        
        '''<comentarios/>
        Public Property xmlData() As String
            Get
                Return Me.xmlDataField
            End Get
            Set
                Me.xmlDataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub EFACCONSULTARESTADOENVIOCompletedEventHandler(ByVal sender As Object, ByVal e As EFACCONSULTARESTADOENVIOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EFACCONSULTARESTADOENVIOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Data
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Data)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub EFACRECEPCIONREPORTECompletedEventHandler(ByVal sender As Object, ByVal e As EFACRECEPCIONREPORTECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EFACRECEPCIONREPORTECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Data
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Data)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub EFACRECEPCIONSOBRECompletedEventHandler(ByVal sender As Object, ByVal e As EFACRECEPCIONSOBRECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EFACRECEPCIONSOBRECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Data
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Data)
            End Get
        End Property
    End Class
End Namespace
